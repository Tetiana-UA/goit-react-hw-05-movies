{"version":3,"file":"static/js/571.0ac7c283.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.jsx","components/Reviews/reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '9d0df20d0e68b9609d989d5d76848891';\n\nexport const getTrendMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  \n  return response.data;\n\n\n};\n\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    }\n  );\n  return response.data.results;\n  \n};\n\n\nexport const getMovieCastById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  \n  return response.data.cast;\n};\n\n\nexport const getMovieReviewsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    { params: { api_key: API_KEY } }\n  );\n  console.log(response.data.results);\n  return response.data.results;\n};\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => (\n    <div >\n      <Audio\n  height=\"80\"\n  width=\"80\"\n  radius=\"9\"\n  color=\"green\"\n  ariaLabel=\"three-dots-loading\"\n  wrapperStyle\n  wrapperClass\n/>\n    </div>\n  );\n\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Notiflix from 'notiflix';\nimport styles from \"./reviews.module.css\";\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { getMovieReviewsById } from \"api/api\";\n\n\n\n\nconst Reviews = () => {\n  \n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    const {id}=useParams();\n\n    useEffect (() => {\n \n    const addReviews = async () => {\n    try{\n        setLoading(true);\n        const reviewsData =await getMovieReviewsById(id);\n    \n        if (reviewsData === 0) {\n            return Notiflix.Notify.failure('There is no information about reviews for this movie');\n        }\n    \n        setReviews(reviewsData);\n        \n        \n        \n        }\n\n    catch (error){\n        setError(error.message)\n    }\n\n    finally{\n        setLoading(false)\n    }\n    }\n  // викликаємо функцію в ній самій\n    addReviews()\n\n},[id])\n\n\n\n\n\n\nconst elements = reviews.map(({id, author, content}) => (\n    <li key={id}>\n        <h4>{author}</h4>\n        <p>{content}</p>\n    </li>))\n\n//для подальшої перевірки записуємо в константу, що масив картинок(gallery) не порожній , тобто Boolean(gallery.length) буде true. А якщо буде порожній , тоьто false, і далі в return не будемо відмальовувати компоненти\nconst isReviews=Boolean(reviews.length)\n\n\n    return (\n    <div className={styles.cast}>\n            \n        {error && <p>{error}</p>}\n        {loading && <Loader/>}\n        {isReviews && <ol>{elements}</ol>}\n                \n    </div>\n    \n    )\n}\n\nexport default Reviews;\n"],"names":["API_KEY","getTrendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","api_key","sent","abrupt","data","results","stop","apply","arguments","getMovieById","_ref2","_callee2","id","_context2","concat","_x","getMoviesByQuery","_ref3","_callee3","query","_context3","_x2","getMovieCastById","_ref4","_callee4","_context4","cast","_x3","getMovieReviewsById","_ref5","_callee5","_context5","console","log","_x4","Loader","_jsx","children","Audio","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","addReviews","reviewsData","Notiflix","t0","message","finish","elements","map","author","content","_jsxs","isReviews","Boolean","length","className","styles"],"sourceRoot":""}